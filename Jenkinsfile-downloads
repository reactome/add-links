// This Jenkinsfile is used by Jenkins to run the AddLinks-Downloads step of Reactome's release.
// It requires that the ConfirmReleaseConfigs step has been run successfully before it can be run.

// Shared library maintained at 'release-jenkins-utils' repository.
def utils = new Utilities()
pipeline{
	agent any

	stages{
		// This stage checks that an upstream project, ConfirmReleaseConfigs, was run successfully for its last build.
		stage('Check ConfirmReleaseConfigs build succeeded'){
			steps{
				script{
					utils.checkUpstreamBuildsSucceeded("ConfirmReleaseConfigs")
				}
			}
		}
		// This stage builds the jar file using maven.
		stage('Setup: Build jar file'){
			steps{
				script{
					sh "mvn clean package -DskipTests"
				}
			}
		}
		// This stage executes the AddLinks file download step. It will download all files needed to run the AddLinks insertion step, storing them
		// at /tmp/addlinks-downloaded-files.
		stage('Main: Download AddLinks files'){
			steps{
				script{
					withCredentials([file(credentialsId: 'Config', variable: 'ConfigFile')]){
						sh "cp $ConfigFile src/main/resources/auth.properties"
						sh "ln -sf src/main/resources resources"
						sh "rm -f src/main/resources/db.properties"
						sh """java -cp "\$(pwd)/resources" -Dconfig.location=\$(pwd)/resources/addlinks.properties -Dlog4j.configurationFile=\$(pwd)/resources/log4j2.xml -Xmx${env.JAVA_MEM_MAX}m -jar target/AddLinks-*-SHADED.jar file://\$(pwd)/resources/file-download-context.xml"""
						sh "rm -f src/main/resources/auth.properties"
					}
				}
			}
		}
		stage('Post: Archive Outputs'){
			steps{
				script{
					def downloadsArchive = "addlinks-downloads-v${currentRelease}.tgz"
					def addlinksFolder = "addlinks-downloaded-files/"
					
					def dataFiles = ["/tmp/$downloadsArchive"]
					def logFiles = ["reports/*"]
					def foldersToDelete = ["reports"]
					
					sh "cd /tmp/; tar -zcvf $downloadsArchive $addlinksFolder"
					utils.cleanUpAndArchiveBuildFiles("add_links/downloads", dataFiles, logFiles, foldersToDelete)
				}
			}
		}
	}
}
